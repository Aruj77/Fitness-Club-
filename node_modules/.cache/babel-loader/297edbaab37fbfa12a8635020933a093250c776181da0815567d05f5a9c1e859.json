{"ast":null,"code":"const initialize = () => {\n  let orderId = \"Order_\" + new Date().getTime();\n\n  // Sandbox Credentials\n  let mid = \"\"; // Merchant ID\n  let mkey = \"\"; // Merchant Key\n  var paytmParams = {};\n  paytmParams.body = {\n    requestType: \"Payment\",\n    mid: mid,\n    websiteName: \"WEBSTAGING\",\n    orderId: orderId,\n    callbackUrl: \"https://merchant.com/callback\",\n    txnAmount: {\n      value: 100,\n      currency: \"INR\"\n    },\n    userInfo: {\n      custId: \"1001\"\n    }\n  };\n  PaytmChecksum.generateSignature(JSON.stringify(paytmParams.body), mkey).then(function (checksum) {\n    console.log(checksum);\n    paytmParams.head = {\n      signature: checksum\n    };\n    var post_data = JSON.stringify(paytmParams);\n    var options = {\n      /* for Staging */\n      // hostname: \"securegw-stage.paytm.in\" /* for Production */,\n\n      hostname: \"securegw.paytm.in\",\n      port: 443,\n      path: `/theia/api/v1/initiateTransaction?mid=${mid}&orderId=${orderId}`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": post_data.length\n      }\n    };\n    var response = \"\";\n    var post_req = https.request(options, function (post_res) {\n      post_res.on(\"data\", function (chunk) {\n        response += chunk;\n      });\n      post_res.on(\"end\", function () {\n        console.log(\"Response: \", response);\n        // res.json({data: JSON.parse(response), orderId: orderId, mid: mid, amount: amount});\n        setPaymentData({\n          ...paymentData,\n          token: JSON.parse(response).body.txnToken,\n          order: orderId,\n          mid: mid,\n          amount: 100\n        });\n      });\n    });\n    post_req.write(post_data);\n    post_req.end();\n  });\n};\nconst makePayment = () => {\n  var config = {\n    \"root\": \"\",\n    \"style\": {\n      \"bodyBackgroundColor\": \"#fafafb\",\n      \"bodyColor\": \"\",\n      \"themeBackgroundColor\": \"#0FB8C9\",\n      \"themeColor\": \"#ffffff\",\n      \"headerBackgroundColor\": \"#284055\",\n      \"headerColor\": \"#ffffff\",\n      \"errorColor\": \"\",\n      \"successColor\": \"\",\n      \"card\": {\n        \"padding\": \"\",\n        \"backgroundColor\": \"\"\n      }\n    },\n    \"data\": {\n      \"orderId\": paymentData.order,\n      \"token\": paymentData.token,\n      \"tokenType\": \"TXN_TOKEN\",\n      \"amount\": paymentData.amount /* update amount */\n    },\n\n    \"payMode\": {\n      \"labels\": {},\n      \"filter\": {\n        \"exclude\": []\n      },\n      \"order\": [\"CC\", \"DC\", \"NB\", \"UPI\", \"PPBL\", \"PPI\", \"BALANCE\"]\n    },\n    \"website\": \"WEBSTAGING\",\n    \"flow\": \"DEFAULT\",\n    \"merchant\": {\n      \"mid\": paymentData.mid,\n      \"redirect\": false\n    },\n    \"handler\": {\n      \"transactionStatus\": function transactionStatus(paymentStatus) {\n        console.log(paymentStatus);\n      },\n      \"notifyMerchant\": function notifyMerchant(eventName, data) {\n        console.log(\"Closed\");\n      }\n    }\n  };\n  if (window.Paytm && window.Paytm.CheckoutJS) {\n    window.Paytm.CheckoutJS.init(config).then(function onSuccess() {\n      window.Paytm.CheckoutJS.invoke();\n    }).catch(function onError(error) {\n      console.log(\"Error => \", error);\n    });\n  }\n};","map":{"version":3,"names":["initialize","orderId","Date","getTime","mid","mkey","paytmParams","body","requestType","websiteName","callbackUrl","txnAmount","value","currency","userInfo","custId","PaytmChecksum","generateSignature","JSON","stringify","then","checksum","console","log","head","signature","post_data","options","hostname","port","path","method","headers","length","response","post_req","https","request","post_res","on","chunk","setPaymentData","paymentData","token","parse","txnToken","order","amount","write","end","makePayment","config","transactionStatus","paymentStatus","notifyMerchant","eventName","data","window","Paytm","CheckoutJS","init","onSuccess","invoke","catch","onError","error"],"sources":["C:/Users/Aruj Bansal/Desktop/react project/muscle-stone-fitness/src/component/paymentButton.jsx"],"sourcesContent":["const initialize = () => {\r\n  let orderId = \"Order_\" + new Date().getTime();\r\n\r\n  // Sandbox Credentials\r\n  let mid = \"\"; // Merchant ID\r\n  let mkey = \"\"; // Merchant Key\r\n  var paytmParams = {};\r\n\r\n  paytmParams.body = {\r\n    requestType: \"Payment\",\r\n    mid: mid,\r\n    websiteName: \"WEBSTAGING\",\r\n    orderId: orderId,\r\n    callbackUrl: \"https://merchant.com/callback\",\r\n    txnAmount: {\r\n      value: 100,\r\n      currency: \"INR\",\r\n    },\r\n    userInfo: {\r\n      custId: \"1001\",\r\n    },\r\n  };\r\n\r\n  PaytmChecksum.generateSignature(JSON.stringify(paytmParams.body), mkey).then(\r\n    function (checksum) {\r\n      console.log(checksum);\r\n      paytmParams.head = {\r\n        signature: checksum,\r\n      };\r\n\r\n      var post_data = JSON.stringify(paytmParams);\r\n\r\n      var options = {\r\n        /* for Staging */\r\n        // hostname: \"securegw-stage.paytm.in\" /* for Production */,\r\n\r\n        hostname: \"securegw.paytm.in\",\r\n\r\n        port: 443,\r\n        path: `/theia/api/v1/initiateTransaction?mid=${mid}&orderId=${orderId}`,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Content-Length\": post_data.length,\r\n        },\r\n      };\r\n\r\n      var response = \"\";\r\n      var post_req = https.request(options, function (post_res) {\r\n        post_res.on(\"data\", function (chunk) {\r\n          response += chunk;\r\n        });\r\n        post_res.on(\"end\", function () {\r\n          console.log(\"Response: \", response);\r\n          // res.json({data: JSON.parse(response), orderId: orderId, mid: mid, amount: amount});\r\n          setPaymentData({\r\n            ...paymentData,\r\n            token: JSON.parse(response).body.txnToken,\r\n            order: orderId,\r\n            mid: mid,\r\n            amount: 100,\r\n          });\r\n        });\r\n      });\r\n\r\n      post_req.write(post_data);\r\n      post_req.end();\r\n    }\r\n  );\r\n};\r\nconst makePayment = () => {\r\n        var config = {\r\n            \"root\":\"\",\r\n            \"style\": {\r\n              \"bodyBackgroundColor\": \"#fafafb\",\r\n              \"bodyColor\": \"\",\r\n              \"themeBackgroundColor\": \"#0FB8C9\",\r\n              \"themeColor\": \"#ffffff\",\r\n              \"headerBackgroundColor\": \"#284055\",\r\n              \"headerColor\": \"#ffffff\",\r\n              \"errorColor\": \"\",\r\n              \"successColor\": \"\",\r\n              \"card\": {\r\n                \"padding\": \"\",\r\n                \"backgroundColor\": \"\"\r\n              }\r\n            },\r\n            \"data\": {\r\n              \"orderId\": paymentData.order,\r\n              \"token\": paymentData.token,\r\n              \"tokenType\": \"TXN_TOKEN\",\r\n              \"amount\": paymentData.amount /* update amount */\r\n            },\r\n            \"payMode\": {\r\n              \"labels\": {},\r\n              \"filter\": {\r\n                \"exclude\": []\r\n              },\r\n              \"order\": [\r\n                  \"CC\",\r\n                  \"DC\",\r\n                  \"NB\",\r\n                  \"UPI\",\r\n                  \"PPBL\",\r\n                  \"PPI\",\r\n                  \"BALANCE\"\r\n              ]\r\n            },\r\n            \"website\": \"WEBSTAGING\",\r\n            \"flow\": \"DEFAULT\",\r\n            \"merchant\": {\r\n              \"mid\": paymentData.mid,\r\n              \"redirect\": false\r\n            },\r\n            \"handler\": {\r\n              \"transactionStatus\":\r\nfunction transactionStatus(paymentStatus){\r\n                console.log(paymentStatus);\r\n              },\r\n              \"notifyMerchant\":\r\nfunction notifyMerchant(eventName,data){\r\n                console.log(\"Closed\");\r\n              }\r\n            }\r\n        };\r\n      \r\n        if (window.Paytm && window.Paytm.CheckoutJS) {\r\n       \twindow.Paytm.CheckoutJS.init(config).\r\nthen(function onSuccess() {\r\n      window.Paytm.CheckoutJS.invoke();\r\n}).catch(function onError(error) {\r\n      console.log(\"Error => \", error);\r\n});\r\n}}\t\t"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAM;EACvB,IAAIC,OAAO,GAAG,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;;EAE7C;EACA,IAAIC,GAAG,GAAG,EAAE,CAAC,CAAC;EACd,IAAIC,IAAI,GAAG,EAAE,CAAC,CAAC;EACf,IAAIC,WAAW,GAAG,CAAC,CAAC;EAEpBA,WAAW,CAACC,IAAI,GAAG;IACjBC,WAAW,EAAE,SAAS;IACtBJ,GAAG,EAAEA,GAAG;IACRK,WAAW,EAAE,YAAY;IACzBR,OAAO,EAAEA,OAAO;IAChBS,WAAW,EAAE,+BAA+B;IAC5CC,SAAS,EAAE;MACTC,KAAK,EAAE,GAAG;MACVC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRC,MAAM,EAAE;IACV;EACF,CAAC;EAEDC,aAAa,CAACC,iBAAiB,CAACC,IAAI,CAACC,SAAS,CAACb,WAAW,CAACC,IAAI,CAAC,EAAEF,IAAI,CAAC,CAACe,IAAI,CAC1E,UAAUC,QAAQ,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBf,WAAW,CAACkB,IAAI,GAAG;MACjBC,SAAS,EAAEJ;IACb,CAAC;IAED,IAAIK,SAAS,GAAGR,IAAI,CAACC,SAAS,CAACb,WAAW,CAAC;IAE3C,IAAIqB,OAAO,GAAG;MACZ;MACA;;MAEAC,QAAQ,EAAE,mBAAmB;MAE7BC,IAAI,EAAE,GAAG;MACTC,IAAI,EAAG,yCAAwC1B,GAAI,YAAWH,OAAQ,EAAC;MACvE8B,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAEN,SAAS,CAACO;MAC9B;IACF,CAAC;IAED,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACV,OAAO,EAAE,UAAUW,QAAQ,EAAE;MACxDA,QAAQ,CAACC,EAAE,CAAC,MAAM,EAAE,UAAUC,KAAK,EAAE;QACnCN,QAAQ,IAAIM,KAAK;MACnB,CAAC,CAAC;MACFF,QAAQ,CAACC,EAAE,CAAC,KAAK,EAAE,YAAY;QAC7BjB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEW,QAAQ,CAAC;QACnC;QACAO,cAAc,CAAC;UACb,GAAGC,WAAW;UACdC,KAAK,EAAEzB,IAAI,CAAC0B,KAAK,CAACV,QAAQ,CAAC,CAAC3B,IAAI,CAACsC,QAAQ;UACzCC,KAAK,EAAE7C,OAAO;UACdG,GAAG,EAAEA,GAAG;UACR2C,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFZ,QAAQ,CAACa,KAAK,CAACtB,SAAS,CAAC;IACzBS,QAAQ,CAACc,GAAG,EAAE;EAChB,CAAC,CACF;AACH,CAAC;AACD,MAAMC,WAAW,GAAG,MAAM;EAClB,IAAIC,MAAM,GAAG;IACT,MAAM,EAAC,EAAE;IACT,OAAO,EAAE;MACP,qBAAqB,EAAE,SAAS;MAChC,WAAW,EAAE,EAAE;MACf,sBAAsB,EAAE,SAAS;MACjC,YAAY,EAAE,SAAS;MACvB,uBAAuB,EAAE,SAAS;MAClC,aAAa,EAAE,SAAS;MACxB,YAAY,EAAE,EAAE;MAChB,cAAc,EAAE,EAAE;MAClB,MAAM,EAAE;QACN,SAAS,EAAE,EAAE;QACb,iBAAiB,EAAE;MACrB;IACF,CAAC;IACD,MAAM,EAAE;MACN,SAAS,EAAET,WAAW,CAACI,KAAK;MAC5B,OAAO,EAAEJ,WAAW,CAACC,KAAK;MAC1B,WAAW,EAAE,WAAW;MACxB,QAAQ,EAAED,WAAW,CAACK,MAAM,CAAC;IAC/B,CAAC;;IACD,SAAS,EAAE;MACT,QAAQ,EAAE,CAAC,CAAC;MACZ,QAAQ,EAAE;QACR,SAAS,EAAE;MACb,CAAC;MACD,OAAO,EAAE,CACL,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,MAAM,EACN,KAAK,EACL,SAAS;IAEf,CAAC;IACD,SAAS,EAAE,YAAY;IACvB,MAAM,EAAE,SAAS;IACjB,UAAU,EAAE;MACV,KAAK,EAAEL,WAAW,CAACtC,GAAG;MACtB,UAAU,EAAE;IACd,CAAC;IACD,SAAS,EAAE;MACT,mBAAmB,EACjC,SAASgD,iBAAiB,CAACC,aAAa,EAAC;QACzB/B,OAAO,CAACC,GAAG,CAAC8B,aAAa,CAAC;MAC5B,CAAC;MACD,gBAAgB,EAC9B,SAASC,cAAc,CAACC,SAAS,EAACC,IAAI,EAAC;QACvBlC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB;IACF;EACJ,CAAC;EAED,IAAIkC,MAAM,CAACC,KAAK,IAAID,MAAM,CAACC,KAAK,CAACC,UAAU,EAAE;IAC7CF,MAAM,CAACC,KAAK,CAACC,UAAU,CAACC,IAAI,CAACT,MAAM,CAAC,CAC5C/B,IAAI,CAAC,SAASyC,SAAS,GAAG;MACpBJ,MAAM,CAACC,KAAK,CAACC,UAAU,CAACG,MAAM,EAAE;IACtC,CAAC,CAAC,CAACC,KAAK,CAAC,SAASC,OAAO,CAACC,KAAK,EAAE;MAC3B3C,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE0C,KAAK,CAAC;IACrC,CAAC,CAAC;EACF;AAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}